// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.25.3
// source: model/event/event.proto

package event

import (
	api "a1in-bot-v3/model/api"
	segment "a1in-bot-v3/model/segment"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventId int32

const (
	// ---- message event ----
	EventId_MessageEventAll            EventId = 0
	EventId_MessageEventPrivateMessage EventId = 1
	EventId_MessageEventGroupMessage   EventId = 2
	// ---- notice event ----
	EventId_NoticeEventAll EventId = 100
)

// Enum value maps for EventId.
var (
	EventId_name = map[int32]string{
		0:   "MessageEventAll",
		1:   "MessageEventPrivateMessage",
		2:   "MessageEventGroupMessage",
		100: "NoticeEventAll",
	}
	EventId_value = map[string]int32{
		"MessageEventAll":            0,
		"MessageEventPrivateMessage": 1,
		"MessageEventGroupMessage":   2,
		"NoticeEventAll":             100,
	}
)

func (x EventId) Enum() *EventId {
	p := new(EventId)
	*p = x
	return p
}

func (x EventId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventId) Descriptor() protoreflect.EnumDescriptor {
	return file_model_event_event_proto_enumTypes[0].Descriptor()
}

func (EventId) Type() protoreflect.EnumType {
	return &file_model_event_event_proto_enumTypes[0]
}

func (x EventId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventId.Descriptor instead.
func (EventId) EnumDescriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{0}
}

// See https://github.com/botuniverse/onebot-11/blob/master/event/README.md
type QQEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件发生的时间戳
	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	// 收到事件的机器人 QQ 号
	SelfId int64 `protobuf:"varint,2,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`
	// 上报类型，可能的值为 message、
	PostType string `protobuf:"bytes,3,opt,name=post_type,json=postType,proto3" json:"post_type,omitempty"`
	// 消息类型， 可能的值为 private、group
	MessageType string `protobuf:"bytes,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	// 消息子类型
	// 在 message_type 取 private 时，如果是好友则是 friend，如果是群临时会话则是
	// group 在 message_type 取 group 时，正常消息是 normal，匿名消息是
	// anonymous，系统提示（如「管理员已禁止群内匿名聊天」）是 notice
	SubType string `protobuf:"bytes,5,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	// 消息 ID
	MessageId int64 `protobuf:"varint,6,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// 群号
	// 仅当 message_type 取 group 时有效
	GroupId int64 `protobuf:"varint,7,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// 发送者 QQ 号
	UserId int64 `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 匿名信息，如果不是匿名消息则为 null
	// 仅当 message_type 取 group 时有效
	Anonymous *QQEvent_Anonymous `protobuf:"bytes,9,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	// 消息内容
	Message []*segment.Segment `protobuf:"bytes,10,rep,name=message,proto3" json:"message,omitempty"`
	// 原始消息内容
	RawMessage string `protobuf:"bytes,11,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
	// 字体
	Font int64 `protobuf:"varint,12,opt,name=font,proto3" json:"font,omitempty"`
	// 发送人信息，各字段尽最大努力提供
	Sender  *QQEvent_Sender      `protobuf:"bytes,13,opt,name=sender,proto3" json:"sender,omitempty"`
	Status  string               `protobuf:"bytes,996,opt,name=status,proto3" json:"status,omitempty"`
	Retcode int64                `protobuf:"varint,997,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Data    *api.APIResponseData `protobuf:"bytes,998,opt,name=data,proto3" json:"data,omitempty"`
	Echo    string               `protobuf:"bytes,999,opt,name=echo,proto3" json:"echo,omitempty"`
}

func (x *QQEvent) Reset() {
	*x = QQEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_event_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQEvent) ProtoMessage() {}

func (x *QQEvent) ProtoReflect() protoreflect.Message {
	mi := &file_model_event_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQEvent.ProtoReflect.Descriptor instead.
func (*QQEvent) Descriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{0}
}

func (x *QQEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *QQEvent) GetSelfId() int64 {
	if x != nil {
		return x.SelfId
	}
	return 0
}

func (x *QQEvent) GetPostType() string {
	if x != nil {
		return x.PostType
	}
	return ""
}

func (x *QQEvent) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *QQEvent) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *QQEvent) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *QQEvent) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *QQEvent) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *QQEvent) GetAnonymous() *QQEvent_Anonymous {
	if x != nil {
		return x.Anonymous
	}
	return nil
}

func (x *QQEvent) GetMessage() []*segment.Segment {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *QQEvent) GetRawMessage() string {
	if x != nil {
		return x.RawMessage
	}
	return ""
}

func (x *QQEvent) GetFont() int64 {
	if x != nil {
		return x.Font
	}
	return 0
}

func (x *QQEvent) GetSender() *QQEvent_Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *QQEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QQEvent) GetRetcode() int64 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *QQEvent) GetData() *api.APIResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QQEvent) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId  EventId `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3,enum=model.EventId" json:"event_id,omitempty"`
	Time     int64   `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	SelfId   int64   `protobuf:"varint,3,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`
	PostType string  `protobuf:"bytes,4,opt,name=post_type,json=postType,proto3" json:"post_type,omitempty"`
	// Types that are assignable to EventData:
	//
	//	*Event_GroupMsg
	//	*Event_PrivateMsg
	EventData isEvent_EventData `protobuf_oneof:"EventData"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_event_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_model_event_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetEventId() EventId {
	if x != nil {
		return x.EventId
	}
	return EventId_MessageEventAll
}

func (x *Event) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Event) GetSelfId() int64 {
	if x != nil {
		return x.SelfId
	}
	return 0
}

func (x *Event) GetPostType() string {
	if x != nil {
		return x.PostType
	}
	return ""
}

func (m *Event) GetEventData() isEvent_EventData {
	if m != nil {
		return m.EventData
	}
	return nil
}

func (x *Event) GetGroupMsg() *GroupMessageEvent {
	if x, ok := x.GetEventData().(*Event_GroupMsg); ok {
		return x.GroupMsg
	}
	return nil
}

func (x *Event) GetPrivateMsg() *PrivateMessageEvent {
	if x, ok := x.GetEventData().(*Event_PrivateMsg); ok {
		return x.PrivateMsg
	}
	return nil
}

type isEvent_EventData interface {
	isEvent_EventData()
}

type Event_GroupMsg struct {
	// ---- message event ----
	GroupMsg *GroupMessageEvent `protobuf:"bytes,5,opt,name=group_msg,json=groupMsg,proto3,oneof"`
}

type Event_PrivateMsg struct {
	PrivateMsg *PrivateMessageEvent `protobuf:"bytes,6,opt,name=private_msg,json=privateMsg,proto3,oneof"`
}

func (*Event_GroupMsg) isEvent_EventData() {}

func (*Event_PrivateMsg) isEvent_EventData() {}

type GroupMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType string                       `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	SubType     string                       `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	MessageId   int64                        `protobuf:"varint,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	GroupId     int64                        `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId      int64                        `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Anonymous   *GroupMessageEvent_Anonymous `protobuf:"bytes,6,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
	Message     []*segment.Segment           `protobuf:"bytes,7,rep,name=message,proto3" json:"message,omitempty"`
	RawMessage  string                       `protobuf:"bytes,8,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
	Font        int64                        `protobuf:"varint,9,opt,name=font,proto3" json:"font,omitempty"`
	Sender      *GroupMessageEvent_Sender    `protobuf:"bytes,10,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *GroupMessageEvent) Reset() {
	*x = GroupMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_event_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessageEvent) ProtoMessage() {}

func (x *GroupMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_model_event_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessageEvent.ProtoReflect.Descriptor instead.
func (*GroupMessageEvent) Descriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{2}
}

func (x *GroupMessageEvent) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *GroupMessageEvent) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *GroupMessageEvent) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *GroupMessageEvent) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupMessageEvent) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupMessageEvent) GetAnonymous() *GroupMessageEvent_Anonymous {
	if x != nil {
		return x.Anonymous
	}
	return nil
}

func (x *GroupMessageEvent) GetMessage() []*segment.Segment {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *GroupMessageEvent) GetRawMessage() string {
	if x != nil {
		return x.RawMessage
	}
	return ""
}

func (x *GroupMessageEvent) GetFont() int64 {
	if x != nil {
		return x.Font
	}
	return 0
}

func (x *GroupMessageEvent) GetSender() *GroupMessageEvent_Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

type PrivateMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType string                      `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	SubType     string                      `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	MessageId   int64                       `protobuf:"varint,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId      int64                       `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message     []*segment.Segment          `protobuf:"bytes,5,rep,name=message,proto3" json:"message,omitempty"`
	RawMessage  string                      `protobuf:"bytes,6,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
	Font        int64                       `protobuf:"varint,7,opt,name=font,proto3" json:"font,omitempty"`
	Sender      *PrivateMessageEvent_Sender `protobuf:"bytes,8,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *PrivateMessageEvent) Reset() {
	*x = PrivateMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_event_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateMessageEvent) ProtoMessage() {}

func (x *PrivateMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_model_event_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateMessageEvent.ProtoReflect.Descriptor instead.
func (*PrivateMessageEvent) Descriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{3}
}

func (x *PrivateMessageEvent) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *PrivateMessageEvent) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *PrivateMessageEvent) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *PrivateMessageEvent) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PrivateMessageEvent) GetMessage() []*segment.Segment {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *PrivateMessageEvent) GetRawMessage() string {
	if x != nil {
		return x.RawMessage
	}
	return ""
}

func (x *PrivateMessageEvent) GetFont() int64 {
	if x != nil {
		return x.Font
	}
	return 0
}

func (x *PrivateMessageEvent) GetSender() *PrivateMessageEvent_Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

type QQEvent_Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发送者 QQ 号
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 昵称
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 性别，male 或 female 或 unknown
	Sex int64 `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	// 年龄
	Age int64 `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	// 群名片／备注
	// 仅当 message_type 取 group 时有效
	Card string `protobuf:"bytes,5,opt,name=card,proto3" json:"card,omitempty"`
	// 地区
	// 仅当 message_type 取 group 时有效
	Area string `protobuf:"bytes,6,opt,name=area,proto3" json:"area,omitempty"`
	// 成员等级
	// 仅当 message_type 取 group 时有效
	Level string `protobuf:"bytes,7,opt,name=level,proto3" json:"level,omitempty"`
	// 角色，owner 或 admin 或 member
	// 仅当 message_type 取 group 时有效
	Role string `protobuf:"bytes,8,opt,name=role,proto3" json:"role,omitempty"`
	// 专属头衔
	// 仅当 message_type 取 group 时有效
	Title string `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *QQEvent_Sender) Reset() {
	*x = QQEvent_Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_event_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQEvent_Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQEvent_Sender) ProtoMessage() {}

func (x *QQEvent_Sender) ProtoReflect() protoreflect.Message {
	mi := &file_model_event_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQEvent_Sender.ProtoReflect.Descriptor instead.
func (*QQEvent_Sender) Descriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{0, 0}
}

func (x *QQEvent_Sender) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *QQEvent_Sender) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QQEvent_Sender) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *QQEvent_Sender) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *QQEvent_Sender) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *QQEvent_Sender) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *QQEvent_Sender) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *QQEvent_Sender) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *QQEvent_Sender) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type QQEvent_Anonymous struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 匿名用户 ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 匿名用户名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 匿名用户 flag，在调用禁言 API 时需要传入
	Flag string `protobuf:"bytes,3,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *QQEvent_Anonymous) Reset() {
	*x = QQEvent_Anonymous{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_event_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQEvent_Anonymous) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQEvent_Anonymous) ProtoMessage() {}

func (x *QQEvent_Anonymous) ProtoReflect() protoreflect.Message {
	mi := &file_model_event_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQEvent_Anonymous.ProtoReflect.Descriptor instead.
func (*QQEvent_Anonymous) Descriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{0, 1}
}

func (x *QQEvent_Anonymous) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QQEvent_Anonymous) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QQEvent_Anonymous) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type GroupMessageEvent_Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex      int64  `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Age      int64  `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Card     string `protobuf:"bytes,5,opt,name=card,proto3" json:"card,omitempty"`
	Area     string `protobuf:"bytes,6,opt,name=area,proto3" json:"area,omitempty"`
	Level    string `protobuf:"bytes,7,opt,name=level,proto3" json:"level,omitempty"`
	Role     string `protobuf:"bytes,8,opt,name=role,proto3" json:"role,omitempty"`
	Title    string `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *GroupMessageEvent_Sender) Reset() {
	*x = GroupMessageEvent_Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_event_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessageEvent_Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessageEvent_Sender) ProtoMessage() {}

func (x *GroupMessageEvent_Sender) ProtoReflect() protoreflect.Message {
	mi := &file_model_event_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessageEvent_Sender.ProtoReflect.Descriptor instead.
func (*GroupMessageEvent_Sender) Descriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{2, 0}
}

func (x *GroupMessageEvent_Sender) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupMessageEvent_Sender) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GroupMessageEvent_Sender) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *GroupMessageEvent_Sender) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GroupMessageEvent_Sender) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GroupMessageEvent_Anonymous struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Flag string `protobuf:"bytes,3,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *GroupMessageEvent_Anonymous) Reset() {
	*x = GroupMessageEvent_Anonymous{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_event_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMessageEvent_Anonymous) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMessageEvent_Anonymous) ProtoMessage() {}

func (x *GroupMessageEvent_Anonymous) ProtoReflect() protoreflect.Message {
	mi := &file_model_event_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMessageEvent_Anonymous.ProtoReflect.Descriptor instead.
func (*GroupMessageEvent_Anonymous) Descriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{2, 1}
}

func (x *GroupMessageEvent_Anonymous) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupMessageEvent_Anonymous) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupMessageEvent_Anonymous) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type PrivateMessageEvent_Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex      int64  `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Age      int64  `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
}

func (x *PrivateMessageEvent_Sender) Reset() {
	*x = PrivateMessageEvent_Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_event_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateMessageEvent_Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateMessageEvent_Sender) ProtoMessage() {}

func (x *PrivateMessageEvent_Sender) ProtoReflect() protoreflect.Message {
	mi := &file_model_event_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateMessageEvent_Sender.ProtoReflect.Descriptor instead.
func (*PrivateMessageEvent_Sender) Descriptor() ([]byte, []int) {
	return file_model_event_event_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PrivateMessageEvent_Sender) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PrivateMessageEvent_Sender) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PrivateMessageEvent_Sender) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *PrivateMessageEvent_Sender) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

var File_model_event_event_proto protoreflect.FileDescriptor

var file_model_event_event_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x1a, 0x1b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb1, 0x06, 0x0a, 0x07, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x61, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x6f, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x6f, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe4, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0xe5, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe6, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x13, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0xe7, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x65, 0x63, 0x68, 0x6f, 0x1a, 0xc9, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x1a, 0x43, 0x0a, 0x09, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x81, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x29, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x3d,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x42, 0x0b, 0x0a,
	0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x05, 0x0a, 0x11, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x40, 0x0a, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x61, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x6f,
	0x6e, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0xc9, 0x01, 0x0a, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x43, 0x0a, 0x09, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x88, 0x03, 0x0a,
	0x13, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x1a, 0x61, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x2a, 0x70, 0x0a, 0x07, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x10, 0x64, 0x42, 0x19, 0x5a, 0x17, 0x61, 0x31, 0x69,
	0x6e, 0x2d, 0x62, 0x6f, 0x74, 0x2d, 0x76, 0x33, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_event_event_proto_rawDescOnce sync.Once
	file_model_event_event_proto_rawDescData = file_model_event_event_proto_rawDesc
)

func file_model_event_event_proto_rawDescGZIP() []byte {
	file_model_event_event_proto_rawDescOnce.Do(func() {
		file_model_event_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_event_event_proto_rawDescData)
	})
	return file_model_event_event_proto_rawDescData
}

var file_model_event_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_model_event_event_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_model_event_event_proto_goTypes = []interface{}{
	(EventId)(0),                        // 0: model.EventId
	(*QQEvent)(nil),                     // 1: model.QQEvent
	(*Event)(nil),                       // 2: model.Event
	(*GroupMessageEvent)(nil),           // 3: model.GroupMessageEvent
	(*PrivateMessageEvent)(nil),         // 4: model.PrivateMessageEvent
	(*QQEvent_Sender)(nil),              // 5: model.QQEvent.Sender
	(*QQEvent_Anonymous)(nil),           // 6: model.QQEvent.Anonymous
	(*GroupMessageEvent_Sender)(nil),    // 7: model.GroupMessageEvent.Sender
	(*GroupMessageEvent_Anonymous)(nil), // 8: model.GroupMessageEvent.Anonymous
	(*PrivateMessageEvent_Sender)(nil),  // 9: model.PrivateMessageEvent.Sender
	(*segment.Segment)(nil),             // 10: model.Segment
	(*api.APIResponseData)(nil),         // 11: model.APIResponseData
}
var file_model_event_event_proto_depIdxs = []int32{
	6,  // 0: model.QQEvent.anonymous:type_name -> model.QQEvent.Anonymous
	10, // 1: model.QQEvent.message:type_name -> model.Segment
	5,  // 2: model.QQEvent.sender:type_name -> model.QQEvent.Sender
	11, // 3: model.QQEvent.data:type_name -> model.APIResponseData
	0,  // 4: model.Event.event_id:type_name -> model.EventId
	3,  // 5: model.Event.group_msg:type_name -> model.GroupMessageEvent
	4,  // 6: model.Event.private_msg:type_name -> model.PrivateMessageEvent
	8,  // 7: model.GroupMessageEvent.anonymous:type_name -> model.GroupMessageEvent.Anonymous
	10, // 8: model.GroupMessageEvent.message:type_name -> model.Segment
	7,  // 9: model.GroupMessageEvent.sender:type_name -> model.GroupMessageEvent.Sender
	10, // 10: model.PrivateMessageEvent.message:type_name -> model.Segment
	9,  // 11: model.PrivateMessageEvent.sender:type_name -> model.PrivateMessageEvent.Sender
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_model_event_event_proto_init() }
func file_model_event_event_proto_init() {
	if File_model_event_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_event_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_event_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_event_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_event_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_event_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQEvent_Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_event_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQEvent_Anonymous); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_event_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessageEvent_Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_event_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMessageEvent_Anonymous); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_event_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivateMessageEvent_Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_model_event_event_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Event_GroupMsg)(nil),
		(*Event_PrivateMsg)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_event_event_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_event_event_proto_goTypes,
		DependencyIndexes: file_model_event_event_proto_depIdxs,
		EnumInfos:         file_model_event_event_proto_enumTypes,
		MessageInfos:      file_model_event_event_proto_msgTypes,
	}.Build()
	File_model_event_event_proto = out.File
	file_model_event_event_proto_rawDesc = nil
	file_model_event_event_proto_goTypes = nil
	file_model_event_event_proto_depIdxs = nil
}
